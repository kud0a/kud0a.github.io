@charset "utf-8";
@font-face {
	font-family: "fb-text";
	src: url("https://github.com/kud0a/kud0a.github.io/blob/b984cc9094874ecb25ac685656910f74d969b3ac/Formera-Light.woff2") format("woff2");
}

*{
	--textheight: calc(var(--fontsize) * 2 - 1px);
	--fontsize: 12px;

	color:#45455A;
	font-family: "fb-text";
	font-size: var(--fontsize);
}

font,a{position: relative;}

body{
	margin: -1em .5em;
	padding: 0 .5em;
}



.main{
	background: rgba(255, 255, 255, .5);

	padding: 3em .5em 0 .5em;
	margin: -5em auto;

	box-shadow: 0 1px 5px rgba(0,0,0,.2);
}

}

hr{
	visibility: hidden;
	position: relative;
	background: transparent;
}



.bg {
    position: absolute;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    filter: blur(3em);
    z-index: -1;
    animation: floating 40s linear infinite;
    opacity: .8;
}

.bg1 {
    --offset-x: 30;
    --offset-y: 40;
    --scale-factor: 0.9;
    --animation-duration: 40s;
    --phase-shift: 0s;
    background: #d0daff;
    top: 1em;
    right: -30em;
    width: 28em;
    animation: floating var(--animation-duration) var(--phase-shift) linear infinite;
}

.bg2 {
    --offset-x: 20;
    --offset-y: 50;
    --scale-factor: 0.8;
    --animation-duration: 50s;
    --phase-shift: -10s;
    background: #f0daf0;
    top: 3em;
    right: -40em;
    width: 20em;
    animation: floating var(--animation-duration) var(--phase-shift) linear infinite;
}

.bg3 {
    --offset-x: 25;
    --offset-y: 45;
    --scale-factor: 0.7;
    --animation-duration: 35s;
    --phase-shift: -5s;
    background: #faf0d0;
    top: 3em;
    right: -25em;
    width: 15em;
    animation: floating var(--animation-duration) var(--phase-shift) linear infinite;
}


@keyframes floating {
    0%, 100% {
        transform: 
            translate(0, 0)
            scale(1);
    }
    25% {
        transform: 
            translate(calc(var(--offset-x) * 1%), calc(var(--offset-y) * -1%))
            scale(var(--scale-factor));
    }
    50% {
        transform: 
            translate(calc(var(--offset-x) * -0.5%), calc(var(--offset-y) * -1.5%))
            scale(calc(var(--scale-factor) - 0.1));
    }
    75% {
        transform: 
            translate(calc(var(--offset-x) * -1%), calc(var(--offset-y) * -0.5%))
            scale(var(--scale-factor));
    }
}